FORMAT: 1A
HOST: http://poupon.me/

# Poupon

Poupon is a simple API allowing consumers to grab data about hip hop.

# Allowed HTTP Requests:
<pre>
    GET : Get a resource or list of resources
</pre>

# Description Of Usual Server Responses:
- 200 `OK` - the request was successful
- 404 'Not Found' - the request was unsuccessful, data not available in database

# Group Artists

## Artist Collection [/api/artists]

### Get All Artists [GET]

This will return all of the artist objects in the database.

+ Response 200 (application/json)

        [
            {
                "artist_id": 472, 
                "artist_picture_link": "https://i.scdn.co/image/cb080366dc8af1fe4dc90c4b9959794794884c66", 
                "name": "Drake", 
                "popularity": 100, 
                "spotify_id": "3TVXtAsR1Inumwj472S9r4"
            }, 
            {
                "artist_id": 449, 
                "artist_picture_link": "https://i.scdn.co/image/3fc1d32020788a97662a9d089ce82df4e622f219", 
                "name": "Post Malone", 
                "popularity": 99, 
                "spotify_id": "246dkjvS1zLTtiykXe5h60"
            }, 
            {
                "artist_id": 509, 
                "artist_picture_link": "https://i.scdn.co/image/7752ce73f4d0720acc6a4c46cb2d2f40f344f834", 
                "name": "Khalid", 
                "popularity": 99, 
                "spotify_id": "6LuN9FCkKOj5PcnpouEgny"
            }, 
            {
                "artist_id": 442, 
                "artist_picture_link": "https://i.scdn.co/image/5c3cf2ee3494e2da71dcf26303202ec491b26213", 
                "name": "Justin Bieber", 
                "popularity": 98, 
                "spotify_id": "1uNFoZAHBGtllmzznpCI3s"
            }
        ]

## Artist [/api/artists/{artist_id}]

### Get Specific Artist [GET]
This will provide a single artist, given their Artist ID.

+ Parameters
    + artist_id: '1' (integer,required) - ID of the Artist in our Database
    
+ Response 200 (application/json)

        {
                "artist_id": 442, 
                "artist_picture_link": "https://i.scdn.co/image/5c3cf2ee3494e2da71dcf26303202ec491b26213", 
                "name": "Justin Bieber", 
                "popularity": 98, 
                "spotify_id": "1uNFoZAHBGtllmzznpCI3s"
        }
        
## Artist [/api/artists/top/{?limit}]

### Get Top Artists [GET]
This provides the top N artists (denoted by limit)

+ Parameters
    + limit: '5' (integer, optional) - Number of documents to pull 
        + Default: 5

+ Response 200 (application/json)

        [
          {
            "artist_id": 472, 
            "artist_picture_link": "https://i.scdn.co/image/cb080366dc8af1fe4dc90c4b9959794794884c66", 
            "name": "Drake", 
            "popularity": 100, 
            "spotify_id": "3TVXtAsR1Inumwj472S9r4"
          }, 
          {
            "artist_id": 509, 
            "artist_picture_link": "https://i.scdn.co/image/7752ce73f4d0720acc6a4c46cb2d2f40f344f834", 
            "name": "Khalid", 
            "popularity": 99, 
            "spotify_id": "6LuN9FCkKOj5PcnpouEgny"
          }, 
          {
            "artist_id": 449, 
            "artist_picture_link": "https://i.scdn.co/image/3fc1d32020788a97662a9d089ce82df4e622f219", 
            "name": "Post Malone", 
            "popularity": 99, 
            "spotify_id": "246dkjvS1zLTtiykXe5h60"
          }, 
          {
            "artist_id": 442, 
            "artist_picture_link": "https://i.scdn.co/image/5c3cf2ee3494e2da71dcf26303202ec491b26213", 
            "name": "Justin Bieber", 
            "popularity": 98, 
            "spotify_id": "1uNFoZAHBGtllmzznpCI3s"
          }, 
          {
            "artist_id": 485, 
            "artist_picture_link": "https://i.scdn.co/image/17f68c8464b468546a6b0a717708842a3cc4b79d", 
            "name": "Lil Uzi Vert", 
            "popularity": 96, 
            "spotify_id": "4O15NlyKLIASxsJ0PrXPfz"
          }, 
          {
            "artist_id": 501, 
            "artist_picture_link": "https://i.scdn.co/image/7a14a83633fc6c00c3977d134397b7235f888cdf", 
            "name": "Rihanna", 
            "popularity": 96, 
            "spotify_id": "5pKCCKE2ajJHZ9KAiaK11H"
          }, 
          {
            "artist_id": 454, 
            "artist_picture_link": "https://i.scdn.co/image/106c76de27f7e556ebb43947aadd1228862d6cd7", 
            "name": "Kendrick Lamar", 
            "popularity": 96, 
            "spotify_id": "2YZyLoL8N0Wb9xBt1NhZWg"
          }, 
          {
            "artist_id": 433, 
            "artist_picture_link": "https://i.scdn.co/image/b0d670ac865dbfaf520997e7a8fadae15c7729bb", 
            "name": "21 Savage", 
            "popularity": 96, 
            "spotify_id": "1URnnhqYAYcrqrcwql10ft"
          }, 
          {
            "artist_id": 411, 
            "artist_picture_link": "https://i.scdn.co/image/bbab705fecb1133cf5d3580f7cdb32966797b7e4", 
            "name": "Travis Scott", 
            "popularity": 95, 
            "spotify_id": "0Y5tJX1MQlPlqiwlOH1tJY"
          }, 
          {
            "artist_id": 425, 
            "artist_picture_link": "https://i.scdn.co/image/e8eeadc5509005396978782adedc3cb3e924bc4d", 
            "name": "Gucci Mane", 
            "popularity": 95, 
            "spotify_id": "13y7CgLHjMVRMDqxdx0Xdo"
          }
        ]

# Group Albums

## Albums Collection [/api/albums]

### Get All Albums [GET]

    This will return all of the albums in the database.
+ Response 200 (application/json)

        [
            {
                "album_id": 3179, 
                "album_picture_link": "https://i.scdn.co/image/c050bd363e83a1e285f3249ae34f43e445c0cd6f", 
                "artist_id": 405, 
                "name": "In My Mind", 
                "release_date": "Fri, 19 Feb 2016 00:00:00 GMT", 
                "spotify_id": "15iSR05cslUeYgf2kuWDhu"
            }, 
            {
                "album_id": 3180, 
                "album_picture_link": "https://i.scdn.co/image/201cb5a5f87285d4925705dd4078fda00c243076", 
                "artist_id": 405, 
                "name": "Pineapple Now-Laters", 
                "release_date": "Tue, 21 Feb 2012 00:00:00 GMT", 
                "spotify_id": "2pGf7mMaV60uMDchGAMcXF"
            }, 
            {
                "album_id": 3181, 
                "album_picture_link": "https://i.scdn.co/image/19ee4a5e6beb359206fd1750845971fc1d347fb2", 
                "artist_id": 406, 
                "name": "Red Friday", 
                "release_date": "Fri, 25 Nov 2016 00:00:00 GMT", 
                "spotify_id": "4VqdntbxmB7r1At6sPKRnb"
            }, 
            {
                "album_id": 3182, 
                "album_picture_link": "https://i.scdn.co/image/e936b372a62a9c8f50c37902158c2f2dab19c442", 
                "artist_id": 406, 
                "name": "Still Brazy (Deluxe)", 
                "release_date": "Fri, 17 Jun 2016 00:00:00 GMT", 
                "spotify_id": "4nwd6ernojhNIIRifDJoRz"
            }, 
            {
                "album_id": 3183, 
                "album_picture_link": "https://i.scdn.co/image/ac4275e8a4ee7f000451be8a93ee67274bc22bb2", 
                "artist_id": 406, 
                "name": "Blame It On The Streets", 
                "release_date": "Mon, 24 Nov 2014 00:00:00 GMT", 
                "spotify_id": "3ldsrFbLgrIJ00byb2tncW"
            }, 
            {
                "album_id": 3184, 
                "album_picture_link": "https://i.scdn.co/image/b9c14f2e57fde1a8ae7e123b74867ff55a03757d", 
                "artist_id": 406, 
                "name": "My Krazy Life", 
                "release_date": "Wed, 01 Jan 2014 00:00:00 GMT", 
                "spotify_id": "51o7e7jwDTbX8r43zbjieM"
            }
        ]
        
## Album [/api/albums/{album_id}]
### Get Album [GET]

    This will provide an album, given by its album ID
    
+ Parameters
    + album_id: `4` (integer) - The ID of the album
    
+ Response 200 (application/json)
        
        {
            "album_id": 3179, 
            "album_picture_link": "https://i.scdn.co/image/c050bd363e83a1e285f3249ae34f43e445c0cd6f", 
            "artist_id": 405, 
            "name": "In My Mind", 
            "release_date": "Fri, 19 Feb 2016 00:00:00 GMT", 
            "spotify_id": "15iSR05cslUeYgf2kuWDhu"
        }


# Group News
            
## News Collection [/api/news]

### Get All Articles [GET]

    This will return all of the news articles in the database.
+ Response 200 (application/json)

        [
            {
                "article_id": 1,
                "published_at": "2015-08-05",
                "title": "Huge new song",
                "score": 23,
                "comments": 5,
                "url": "example.com",
                "artists": [
                    {
                        "artist_id": 2,
                    }, {
                        "artist_id": 4
                    }
                ]
            }
        ]

## Articles [/api/news/{ISO_date}]

### Get Relevant Articles [GET]
    
    This will return relevant news articles by the date specified.
    
+ Parameters 
    + ISO_date: `2017-9-28` (String) - Date in ISO Format

+ Response 200 (application/json)

        [
            {
                "id": 7,
                "title": "[FRESH] Kendrick Lamar: \"Humble\" (Single)",
                "score": 25380,
                "num_comments": 3248,
                "url": "https://www.youtube.com/watch?v=tvTRZJ-4EyI",
                "artists" : [
                    "Kendrick Lamar"
                ]
            }
        ]

# Group Cities
            
## Cities Collection [/api/cities]

### List All Cities [GET]

    This will return all of the city objects in the database.
    
+ Response 200 (application/json)

        [
            {
                "city_id": 18, 
                "city_picture_link": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/Map_of_New_York_Highlighting_New_York_City.svg/630px-Map_of_New_York_Highlighting_New_York_City.svg.png", 
                "name": "New York City", 
                "population": 8537673, 
                "state": "NY"
            }, 
            {
                "city_id": 14, 
                "city_picture_link": "https://upload.wikimedia.org/wikipedia/en/6/62/Los_Angeles_County_California_Incorporated_and_Unincorporated_areas_Compton_Highlighted_0615044.svg", 
                "name": "Los Angeles", 
                "population": 3976322, 
                "state": "CA"
            }, 
            {
                "city_id": 12, 
                "city_picture_link": "https://upload.wikimedia.org/wikipedia/en/8/82/DuPage_County_Illinois_Incorporated_and_Unincorporated_areas_Chicago_Highlighted.svg", 
                "name": "Chicago", 
                "population": 2704958, 
                "state": "IL"
            }, 
            {
                "city_id": 20, 
                "city_picture_link": "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/New_York_City_location_Brooklyn.svg/485px-New_York_City_location_Brooklyn.svg.png", 
                "name": "Brooklyn", 
                "population": 2629150, 
                "state": "NY"
            }, 
            {
                "city_id": 23, 
                "city_picture_link": "https://upload.wikimedia.org/wikipedia/commons/thumb/9/94/New_York_City_location_Queens.svg/485px-New_York_City_location_Queens.svg.png", 
                "name": "Queens", 
                "population": 2333054, 
                "state": "NY"
            }
        ]
        
## City [/api/cities/{city_id}]

### Get Specific City [GET]
    
    This will return the City object by the city id specified

+ Parameters
    + city_id: `11` (Integer) - ID number of the city

+ Response 200 (application/json)

        {
            "city_id": 23, 
            "city_picture_link": "https://upload.wikimedia.org/wikipedia/commons/thumb/9/94/New_York_City_location_Queens.svg/485px-New_York_City_location_Queens.svg.png", 
            "name": "Queens", 
            "population": 2333054, 
            "state": "NY"
        }